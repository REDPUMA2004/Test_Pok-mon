// const url = "http://localhost/be/Test/api/PokemonApi";

// function getUsers() {
// fetch(url)
// .then((response) => response.json())
// .then(async (data) => {
// console.log(data);
// var hbs = await fetch("template.hbs").then((res) => res.text());
// var template = Handlebars.compile(hbs);
// var html = template(data);
// document.getElementById("output").innerHTML = html;
// });
// }

// ---------------------------------------------------------------------------

// async function loadPokemonDropdown() {
// try {
// const response = await fetch(url);
// const pokemons = await response.json();

// const select = document.getElementById("pokemonSelect");
// const detailsDiv = document.getElementById("pokemonDetails");

// select.innerHTML = '<option value="">Scegli un Pokémon</option>';
// pokemons.forEach((p) => {
// const option = document.createElement("option");
// option.value = p.id;
// option.textContent = p.nome;
// select.appendChild(option);
// });

// select.addEventListener("change", async function () {
// const id = this.value;
// if (!id) {
// detailsDiv.innerHTML = "";
// return;
// }

// const res = await fetch(`${url}/${id}`);
// if (!res.ok) {
// detailsDiv.innerHTML =
// '<div class="alert alert-danger">Errore nel caricamento dei dettagli.</div>';
// return;
// }

// const pokemon = await res.json();
// detailsDiv.innerHTML = `//         <div class="card mt-3 w-50">
//           <div class="card-body">
//             <h5 class="card-title">${pokemon.nome}</h5>
//             <p class="card-text">Attacco: <strong>${pokemon.attacco}</strong></p>
//             <p class="card-text">Difesa: <strong>${pokemon.difesa}</strong></p>
//           </div>
//         </div>
//      `;
// });
// } catch (error) {
// console.error("Errore caricando la lista Pokémon:", error);
// }
// }

// getUsers();
// loadPokemonDropdown();

// ---------------------------------------------------------------------------

// async function insertPokemon() {
// const nome = prompt("Inserisci il nome:");
// const attacco = Number(prompt("Inserisci l'attacco:"));
// const difesa = Number(prompt("Inserisci la difesa:"));

// if (!nome || isNaN(attacco) || isNaN(difesa)) {
// alert("Inserisci un nome valido e numeri per attacco e difesa!");
// return;
// }

// try {
// const response = await fetch(`${url}/insert`, {
// method: "POST",
// headers: {
// "Content-Type": "application/json",
// Accept: "application/json",
// },
// body: JSON.stringify({ Nome: nome, Attacco: attacco, Difesa: difesa }),
// });

// if (!response.ok) {
// throw new Error(await response.text());
// }

// const result = await response.json();
// console.log("Inserimento avvenuto con successo:", result);
// getUsers();

// } catch (error) {
// console.error("Errore durante l'inserimento:", error);
// alert("Errore durante l'inserimento. Controlla la console.");
// }
// }

// ---------------------------------------------------------------------------

// function updatePokemon(id) {
// var getValue = (field) => document.getElementById(`${field}-${id}`).value;
// var nome = getValue("nome");
// var attacco = getValue("attacco");
// var difesa = getValue("difesa");

// if (!nome || isNaN(attacco) || isNaN(difesa)) {
// return alert("Per favore, inserisci valori validi!");
// }

// fetch(
// `${url}/update?id=${id}&nome=${nome}&attacco=${attacco}&difesa=${difesa}`,
// {
// method: "PUT",
// headers: {
// "Content-Type": "application/json",
// Accept: "application/json",
// },
// }
// )
// .then((res) => {
// if (!res.ok) throw new Error("Errore durante l'aggiornamento");
// alert("Pokémon aggiornato con successo!");
// getUsers();
// closeModal(id);
// })
// .catch((err) => console.error(err.message));
// }
// getUsers();

// ---------------------------------------------------------------------------

// <div class="container my-4">
// <h3>Seleziona un Pokémon</h3>
// <select id="pokemonSelect" class="form-select w-50">
// <option value="">-- Scegli un Pokémon --</option>
// </select>
// <div id="pokemonDetails" class="mt-3"></div>
// </div> -->
// <!-- <html>
// <head>
// <meta charset="UTF-8" />
// <title>Tabella Pokémon con Handlebars + DataTables + Select2</title>
// <link
// href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
// rel="stylesheet"
// />
// <link
// rel="stylesheet"
// href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"
// />
// <link
// rel="stylesheet"
// href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css"
// />
// <link
// href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css"
// rel="stylesheet"
// />
// <link rel="stylesheet" href="stile.css" />
// <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js"></script>
// </head>

// <body class="bg-light">
// <div class="container my-5">
// <h1 class="text-center mb-4">Pokémon</h1>

// <div id="output"></div>
// </div>

// <div id="modalsContainer"></div>

// <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
// <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
// <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
// <script src="script.js"></script>
// </body>
// </html>

// ---------------------------------------------------------------------------

// async function updatePokemon(id) {
// var getValue = (field) => document.getElementById(`${field}-${id}`).value;
// var nome = getValue("nome");
// var attacco = getValue("attacco");
// var difesa = getValue("difesa");

// if (!nome || isNaN(attacco) || isNaN(difesa)) {
// return alert("Per favore, inserisci valori validi!");
// }

// try {
// let response;
// if (id == 0) {
// // INSERIMENTO
// response = await fetch(`${url}/insert`, {
// method: "POST",
// headers: {
// "Content-Type": "application/json",
// Accept: "application/json",
// },
// body: JSON.stringify({ Nome: nome, Attacco: attacco, Difesa: difesa }),
// });
// } else {
// // AGGIORNAMENTO
// response = await fetch(
// `${url}/update?id=${id}&nome=${nome}&attacco=${attacco}&difesa=${difesa}`,
// {
// method: "PUT",
// headers: {
// "Content-Type": "application/json",
// Accept: "application/json",
// },
// }
// );
// }

// if (!response.ok) throw new Error(await response.text());
// alert(id == 0 ? "Pokémon inserito con successo!" : "Pokémon aggiornato!");
// getUsers();
// } catch (error) {
// console.error("Errore nel salvataggio:", error);
// alert("Errore durante il salvataggio del Pokémon.");
// }
// }

// ---------------------------------------------------------------------------

// $(document).on("submit", "form", async function (e) {
// e.preventDefault();

// var $form = $(this);
// var formId = $form.attr("id");

// // ID MODULO NON PRESENTE O NON INIZIA CON editForm-
// if (!formId || !formId.startsWith("editForm-")) return;

// var id = parseInt(formId.split("-")[1]);
// var nome = $(`#nome-${id}`).val();
//   var attacco = parseInt($(`#attacco-${id}`).val());
//   var difesa = parseInt($(`#difesa-${id}`).val());

// if (!nome || isNaN(attacco) || isNaN(difesa)) {
// return alert("Per favore, inserisci valori validi!");
// }

// try {
// let response;
// if (id === 0) {
// // INSERIMENTO
// response = await fetch(`${url}/insert`, {
// method: "POST",
// headers: {
// "Content-Type": "application/json",
// Accept: "application/json",
// },
// body: JSON.stringify({ Nome: nome, Attacco: attacco, Difesa: difesa }),
// });
// } else {
// // AGGIORNAMENTO
// response = await fetch(
// `${url}/update?id=${id}&nome=${nome}&attacco=${attacco}&difesa=${difesa}`,
// {
// method: "PUT",
// headers: {
// "Content-Type": "application/json",
// Accept: "application/json",
// },
// }
// );
// }

// if (!response.ok) throw new Error(await response.text());
// alert(id === 0 ? "Pokémon inserito con successo!" : "Pokémon aggiornato!");
// getUsers();
// } catch (error) {
// console.error("Errore nel salvataggio:", error);
// alert("Errore durante il salvataggio del Pokémon.");
// }
// });

// ---------------------------------------------------------------------------

// <div class="container mb-4">
// <table id="pokemonTable" class="table table-hover text-center align-middle custom-table">
// <thead class="table-dark">
// <tr>
// <th>Nome</th>
// <th>Attacco</th>
// <th>Difesa</th>
// <th>Azioni</th>
// </tr>
// </thead>
// <tbody>
// {{#each .}}
// <tr>
// <td class="open-modal" data-id="{{id}}">{{nome}}</td>
// <td class="open-modal" data-id="{{id}}">{{attacco}}</td>
// <td class="open-modal" data-id="{{id}}">{{difesa}}</td>
// <td>
// <button class="btn btn-danger btn-sm" onclick="deletePokemon({{id}})">Elimina</button>
// <button class="btn btn-warning open-modal" data-id="0">Inserisci</button>

// </td>
// </tr>
// {{/each}}
// </tbody>

// </table>

// <button class="btn btn-warning" onclick="insertPokemon()">Inserisci</button>

// </div>

// {{#each .}}

// <div id="modal-{{id}}" class="modal" style="display: none;">
// <div class="modal-overlay"></div>
// <div class="modal-content">
// <h2>Modifica Dettagli Pokémon</h2>
// <form id="editForm-{{id}}">
// <div class="mb-3">
// <label for="nome-{{id}}" class="form-label">Nome <span class="required">_</span></label>
// <input type="text" id="nome-{{id}}" class="form-control" value="" required>
// </div>
// <div class="mb-3">
// <label for="attacco-{{id}}" class="form-label">Attacco <span class="required">_</span></label>
// <input type="number" id="attacco-{{id}}" class="form-control" value="" min="0" required>
// </div>
// <div class="mb-3">
// <label for="difesa-{{id}}" class="form-label">Difesa <span class="required">\*</span></label>
// <input type="number" id="difesa-{{id}}" class="form-control" value="" min="0" required>
// </div>
// <div class="modal-buttons">
// <button type="submit" class="btn btn-success">Salva</button>
// <button type="button" class="btn btn-secondary close-modal">Annulla</button>
// </div>
// </form>
// </div>
// </div>
// {{/each}}

// <div id="modal-0" class="modal" style="display: none;">
// <div class="modal-overlay"></div>
// <div class="modal-content">
// <h2>Nuovo Pokémon</h2>
// <form id="editForm-0">
// <div class="mb-3">
// <label for="nome-0" class="form-label">Nome <span class="required">_</span></label>
// <input type="text" id="nome-0" class="form-control" value="" required>
// </div>
// <div class="mb-3">
// <label for="attacco-0" class="form-label">Attacco <span class="required">_</span></label>
// <input type="number" id="attacco-0" class="form-control" value="" min="0" required>
// </div>
// <div class="mb-3">
// <label for="difesa-0" class="form-label">Difesa <span class="required">\*</span></label>
// <input type="number" id="difesa-0" class="form-control" value="" min="0" required>
// </div>
// <div class="modal-buttons">
// <button type="submit" class="btn btn-success">Salva</button>
// <button type="button" class="btn btn-secondary close-modal">Annulla</button>
// </div>
// </form>
// </div>
// </div>
